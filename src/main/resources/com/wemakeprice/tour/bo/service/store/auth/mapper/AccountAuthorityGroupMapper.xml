<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wemakeprice.tour.bo.service.store.auth.mapper.AccountAuthorityGroupMapper">

    <resultMap id="AuthorityGroupResultMap" type="com.wemakeprice.tour.bo.domain.entity.auth.AccountAuthorityGroup">
        <id property="accountId" column="authority_name"/>
        <id property="authorityGroupId" column="authority_group_id"/>
        <association property="auditLog" javaType="com.wemakeprice.tour.bo.common.entity.AuditLog">
            <result property="createdBy" column="created_by"/>
            <result property="createdAt" column="created_at"/>
        </association>
    </resultMap>

    <insert id="insert" parameterType="com.wemakeprice.tour.bo.domain.entity.auth.AccountAuthorityGroup">
        insert into tb_account_authority_group (authority_group_id,
                                                account_id,
                                                created_by,
                                                created_at)
        values (#{authorityGroupId},
                #{accountId},
                #{auditLog.createdBy},
                now())
    </insert>

    <select id="selectByAccountId" resultType="com.wemakeprice.tour.bo.domain.entity.auth.AccountAuthorityGroup">
        select account_id,
               authority_group_id,
               created_by,
               created_at
        from tb_account_authority_group
        where account_id = #{accountId}
    </select>

    <select id="selectAllByAccountIds" resultType="com.wemakeprice.tour.bo.domain.entity.auth.AccountAuthorityGroup">
        select account_id,
        authority_group_id,
        created_by,
        created_at
        from tb_account_authority_group
        where account_id in
        <foreach collection="accountIds" item="accountId" open="(" separator="," close=")">
            #{accountId}
        </foreach>
    </select>

    <update id="update">
        update tb_account_authority_group
        set authority_group_id = #{authorityGroupId}
        where account_id = #{accountId}
    </update>

    <delete id="delete">
        delete
        from tb_account_authority_group
        where account_id = #{accountId}
    </delete>

</mapper>
